@import '../helpers/variables';
@import '../helpers/mixins';

@keyframes blink {
  50% { color: rgba($inputColor, 0) }
}


@each $size, $width in $grid-breakpoints {
  @if $size != "xs" {
    @media (min-width: $width) {
      .terminal-input {
        width: calc(#{map-get($container-max-widths, $size) / 2} - 30px);
        left: calc((100vw - #{map-get($container-max-widths, $size)}) / 2 + 15px);
      }
    }
  }
}

.terminal-input {
  z-index: $zTermianal;
  display: inline-block;
  position: absolute;
  @include inputBoxShadow($shadowColor);
  transition:
    box-shadow 135ms cubic-bezier(0.4, 0, 0.2, 1),
    top $terminalTransitionTime;
  top: 200px;
  &--output {
    top: 0;
  }
  &:focus-within {
    @include inputFocusBoxShadow($shadowColor);
  }
  input {
    width: 100%;
    line-height: $navHeight;
    border: 0;
    outline: 0;
    border-left: 0.4rem solid transparent;
    transition: border-color 0.5s;
    outline-offset: 0;
    padding: 0 1rem;
    font-size: 1.5rem;
    caret-color: transparent;
    font-family: 'DejaVu Sans Mono', monospace, 'Courier New', Courier;
  }

  &__input {
    background-color: rgba(white, 0.5);
    color: rgba($inputColor, 0.8);
    z-index: 9;
    transition: background-color, 0.8s ease-out;
    &:focus {
      background-color: rgba(white, 0.8);
    }
  }

  &__support {
    display: none;
    position: absolute;
    top: 0;
    pointer-events:none;
    background-color: rgba(white, 0);
    border-left: 0.4rem solid transparent;
    color: rgba($inputColor, 1);
    z-index: 10;
    animation: blink 1s step-end infinite;
  }

  &__support-contrast {
    color: rgba($inpurContrastColor, 0.8);
    z-index: 11;
  }
}
